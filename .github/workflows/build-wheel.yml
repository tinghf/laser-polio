name: build wheel
on: [workflow_dispatch]
jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: 'py312 (ubuntu/x86_64)'
            python: '3.12'
            toxpython: 'python3.12'
            python_arch: 'x64'
            tox_env: 'py312'
            os: 'ubuntu-latest'
            wheel: true
          - name: 'py312 (windows/AMD64)'
            python: '3.12'
            toxpython: 'python3.12'
            python_arch: 'x64'
            tox_env: 'py312'
            os: 'windows-latest'
            wheel: false
          - name: 'py312 (macos/x86_64)'
            python: '3.12'
            toxpython: 'python3.12'
            python_arch: 'x64'
            tox_env: 'py312'
            os: 'macos-13'
            wheel: false
          - name: 'py312 (macos/arm64)'
            python: '3.12'
            toxpython: 'python3.12'
            python_arch: 'arm64'
            tox_env: 'py312'
            os: 'macos-latest'
            wheel: false
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.python_arch }}
    - name: install dependencies
      run: |
        python -m pip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: regular build and test
      env:
        TOXPYTHON: '${{ matrix.toxpython }}'
      run: >
        tox -e ${{ matrix.tox_env }} -v
  wheel:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: build wheel
      run: |
        python -m build
        cd dist
        echo "artifactName=`ls *.whl`" >> $GITHUB_ENV
    - name: upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifactName }}
        path: dist/*.whl
